//! String utilities.

/// Concatenate two strings.
#[language("string:concat")]
pub fn concat(a: str, b: str) -> str
  bytes(a), bytes(b) |> std:array:concat |> from_bytes

/// Compute the length of a string.
#[language("string:length")]
pub fn length(s: str) -> int
  bytes(s) |> std:array:length

/// Convert a string to a list of graphemes.
///
/// A grapheme is a single unit of text that is displayed as a single character.
#[language("string:graphemes")]
pub fn graphemes(s: str) -> [str]
  panic "string_graphemes builtin not implemented"

/// Get the array of bytes representing a string.
#[language("string:bytes")]
pub fn bytes(a: str) -> array:Array<u8>
  panic "string:bytes builtin not implemented"

/// Create a string from a array of bytes.
#[language("string:from_bytes")]
pub fn from_bytes(a: array:Array<u8>) -> str
  panic "string:from_bytes builtin not implemented"

/// Join a list of strings with a separator.
pub fn join(sep: str, xs: [str]) -> str
  match xs
  | [] -> ""
  | [s] -> s
  | [s, ..rest] -> concat(s, sep) |> concat(_, join(sep, rest))
