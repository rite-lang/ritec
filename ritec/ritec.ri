pub import span
pub import parse
pub import diagnostic

import std:result:Result

fn main(args: [str])
  let sources = span:new_sources()
  let assert Ok(source) = span:load_source("ritec/parse/lexer.ri")
  let sources, id = span:add_source(sources, source)

  match run(source.text, id)
  | Ok(_) -> void
  | Err(report) -> diagnostic:report:print(report, sources)

fn run(text, id) 
  let stream = parse:lexer:lex(id, text)?

  match parse:expr:parse(stream)
  | Ok(expr) -> 
    std:debug:print(expr)
    Ok(void)
  | Err(diagnostic) ->
    diagnostic:report:new()
    |> diagnostic:report:add(diagnostic)
    |> Err
